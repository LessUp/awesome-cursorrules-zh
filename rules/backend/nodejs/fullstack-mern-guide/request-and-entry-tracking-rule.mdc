---
description: 请求和条目追踪规则
globs: []
alwaysApply: false
---

# 请求和条目追踪规则

本规则集定义了全栈 MERN 指南中请求和数据条目追踪的规范，旨在提高系统的可观测性、可审计性和问题排查效率。

## 1. 请求追踪

- **唯一请求 ID**: 为每个传入的 HTTP 请求生成一个唯一的请求 ID（例如使用 UUID）。
- **日志关联**: 在整个请求生命周期中，将此请求 ID 贯穿于所有相关的日志记录中，包括前端、后端服务、数据库查询等。
- **请求头传递**: 如果请求跨越多个服务（微服务架构），请求 ID 应该通过 HTTP 请求头（如 `X-Request-ID`）进行传递。

## 2. 数据条目追踪

- **创建者和创建时间**: 所有数据条目在创建时应记录创建用户（`createdBy`）和创建时间（`createdAt`）。
- **最后修改者和修改时间**: 所有数据条目在更新时应记录最后修改用户（`updatedBy`）和最后修改时间（`updatedAt`）。
- **版本控制/历史记录**: 对于关键数据，考虑实现版本控制或历史记录功能，记录每次修改的具体内容。

## 3. 日志记录规范

- **结构化日志**: 使用结构化日志（如 JSON 格式）记录信息，便于日志分析工具进行解析和查询。
- **日志级别**: 合理使用日志级别（DEBUG, INFO, WARN, ERROR, FATAL），区分不同重要性的信息。
- **敏感信息脱敏**: 在日志中对敏感信息（如密码、个人身份信息）进行脱敏处理，避免泄露。

## 4. 监控与告警

- **关键指标监控**: 监控请求量、响应时间、错误率等关键指标。
- **异常告警**: 当系统出现异常（如高错误率、请求超时）时，及时发出告警。

## 5. 可视化与分析

- **日志聚合**: 使用日志聚合工具（如 ELK Stack, Grafana Loki）集中管理和查询日志。
- **追踪系统**: 集成分布式追踪系统（如 Jaeger, Zipkin），可视化请求在不同服务间的流转。
