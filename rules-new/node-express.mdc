---
description: Node.js 和 Express.js 后端开发最佳实践
globs: **/*.js, **/*.ts, src/**/*.ts
---

# Node.js 和 Express.js 最佳实践

## 项目结构
- 使用正确的目录结构
- 实现正确的模块组织
- 使用正确的中间件组织
- 按域组织路由
- 实现正确的错误处理
- 使用正确的配置管理

## Express 设置
- 使用正确的中间件设置
- 实现正确的路由
- 使用正确的错误处理
- 配置正确的安全中间件
- 实现正确的验证
- 使用正确的静态文件服务

## API 设计
- 使用正确的 REST 原则
- 实现正确的版本控制
- 使用正确的请求验证
- 正确处理错误
- 实现正确的响应格式
- 正确地为 API 编写文档

## 数据库集成
- 使用正确的 ORM/ODM
- 实现正确的迁移
- 使用正确的连接池
- 实现正确的事务
- 使用正确的查询优化
- 正确处理数据库错误

## 认证
- 实现正确的 JWT 处理
- 使用正确的密码哈希
- 实现正确的会话管理
- 使用正确的 OAuth 集成
- 实现正确的基于角色的访问控制
- 正确处理认证错误

## 安全
- 使用正确的 CORS 设置
- 实现正确的速率限制
- 使用正确的安全头
- 实现正确的输入验证
- 使用正确的加密
- 处理安全漏洞

## 性能
- 使用正确的缓存
- 实现正确的异步操作
- 使用正确的连接池
- 实现正确的日志记录
- 使用正确的监控
- 正确处理高流量

## 测试
- 编写正确的单元测试
- 实现正确的集成测试
- 使用正确的测试运行器
- 实现正确的模拟
- 测试错误场景
- 使用正确的测试覆盖率

## 部署
- 使用正确的 Docker 设置
- 实现正确的 CI/CD
- 使用正确的环境变量
- 配置正确的日志记录
- 实现正确的监控
- 处理部署错误

## 最佳实践
- 遵循 Node.js 最佳实践
- 正确使用 async/await
- 实现正确的错误处理
- 使用正确的日志记录
- 正确处理进程信号
- 正确地为代码编写文档
