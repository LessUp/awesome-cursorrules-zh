---
description: FastAPI 最佳实践和模式，用于构建现代 Python Web API
globs: **/*.py, app/**/*.py, api/**/*.py
---

# FastAPI 最佳实践

## 项目结构
- 使用正确的目录结构
- 实现正确的模块组织
- 使用正确的依赖注入
- 按域组织路由
- 实现正确的中间件
- 使用正确的配置管理

## API 设计
- 使用正确的 HTTP 方法
- 实现正确的状态码
- 使用正确的请求/响应模型
- 实现正确的验证
- 使用正确的错误处理
- 使用 OpenAPI 记录 API

## 模型
- 使用 Pydantic 模型
- 实现正确的验证
- 使用正确的类型提示
- 保持模型井然有序
- 使用正确的继承
- 实现正确的序列化

## 数据库
- 使用正确的 ORM (SQLAlchemy)
- 实现正确的迁移
- 使用正确的连接池
- 实现正确的事务
- 使用正确的查询优化
- 正确处理数据库错误

## 认证
- 实现正确的 JWT 认证
- 使用正确的密码哈希
- 实现正确的基于角色的访问控制
- 使用正确的会话管理
- 实现正确的 OAuth2
- 正确处理认证错误

## 安全
- 实现正确的 CORS
- 使用正确的速率限制
- 实现正确的输入验证
- 使用正确的安全头
- 正确处理安全错误
- 实现正确的日志记录

## 性能
- 使用正确的缓存
- 实现正确的异步操作
- 使用正确的后台任务
- 实现正确的连接池
- 使用正确的查询优化
- 监控性能指标

## 测试
- 编写正确的单元测试
- 实现正确的集成测试
- 使用正确的测试夹具
- 实现正确的模拟
- 测试错误场景
- 使用正确的测试覆盖率

## 部署
- 使用正确的 Docker 配置
- 实现正确的 CI/CD
- 使用正确的环境变量
- 实现正确的日志记录
- 使用正确的监控
- 正确处理部署错误

## 文档
- 使用正确的文档字符串
- 实现正确的 API 文档
- 使用正确的类型提示
- 保持文档更新
- 记录错误场景
- 使用正确的版本控制
